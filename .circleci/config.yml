# Python CircleCI 2.0 configuration file
#
# https://circleci.com/docs/2.0/language-python/
# https://circleci.com/docs/1.0/deploy-google-app-engine/
# https://circleci.com/docs/1.0/google-cloud-platform/
# https://github.com/GoogleCloudPlatform/continuous-deployment-circle

version: 2
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/python:2.7.15
    environment:
      TZ: /usr/share/zoneinfo/Asia/Tokyo
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python2.7/site-packages
      - run:
          name: Create a directory to store your third-party libraries
          command: |
            mkdir lib
            echo 'export PYTHONPATH=$PYTHONPATH:$(pwd)/lib/' >> $BASH_ENV
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-ci.txt" }}-{{ checksum ".circleci/config.yml" }}-
      - run:
          name: install cache deb file
          command: |
            if [[ $(find /home/circleci/apt/archives -name "*.deb") == *".deb"* ]];then
              sudo dpkg -i /home/circleci/apt/archives/*.deb
            fi
      - run:
          name: install lsb-release, rename and set CLOUD_SDK_REPO
          command: |
            sudo apt -d install lsb-release rename
            if [[ $(find /var/cache/apt/archives -name "*.deb") == *".deb"* ]];then
              sudo dpkg -i /var/cache/apt/archives/*.deb
              mkdir -p /home/circleci/apt/archives/
              # Delete the version number from file name and overwrite the latest .deb file.
              # ex) google-cloud-sdk-app-engine-python-extras_220.0.0-0_all.deb
              # --> google-cloud-sdk-app-engine-python-extras.deb
              sudo rename s/_.*$/.deb/ /var/cache/apt/archives/*.deb
              cp -r /var/cache/apt/archives/*.deb /home/circleci/apt/archives/
            fi
            echo 'export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"' >> $BASH_ENV
      - run:
          name: install gcloud command and python sdk
          command: |
            echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
            sudo apt update
            sudo apt -d install google-cloud-sdk google-cloud-sdk-app-engine-python google-cloud-sdk-app-engine-python-extras
            if [[ $(find /var/cache/apt/archives -name "*.deb") == *".deb"* ]];then
              sudo dpkg -i /var/cache/apt/archives/*.deb
              mkdir -p /home/circleci/apt/archives/
              # Delete the version number from file name and overwrite the latest .deb file.
              # ex) google-cloud-sdk-app-engine-python-extras_220.0.0-0_all.deb
              # --> google-cloud-sdk-app-engine-python-extras.deb
              sudo rename s/_.*$/.deb/ /var/cache/apt/archives/*.deb
              cp -r /var/cache/apt/archives/*.deb /home/circleci/apt/archives/
            fi
            echo 'export PATH=$PATH:/usr/lib/google-cloud-sdk/platform/google_appengine/bin/' >> $BASH_ENV
            echo 'export PYTHONPATH=$PYTHONPATH:/usr/lib/google-cloud-sdk/platform/google_appengine/' >> $BASH_ENV
      - run:
          name: vendor our dependencies
          command: |
            pip install -r requirements-ci.txt
            pip install -t lib -r requirements.txt
      - save_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-ci.txt" }}-{{ checksum ".circleci/config.yml" }}-{{ epoch }}
          paths:
            - "/usr/local/bin"
            - "/usr/local/lib/python2.7/site-packages"
            - "lib"
            - "/home/circleci/apt/archives/"
      - run:
          name: Check PEP 8 for flake8
          command: flake8 ./ tests --output-file flake8-test-reports
      - store_artifacts:
          path: flake8-test-reports
          destination: flake8-test-reports
      - run:
          name: Check Python 2/3 compatible test for pylint
          command: pylint --py3k ./* tests/* > pylint-test-reports 2>&1
      - store_artifacts:
          path: pylint-test-reports
          destination: pylint-test-reports
      - run:
          name: Run unittest
          command: python -m unittest discover -v tests > unittest-test-reports 2>&1
      - store_artifacts:
          path: unittest-test-reports
          destination: unittest-test-reports

  deploy:
    working_directory: ~/repo
    docker:
      - image: google/cloud-sdk
    environment:
      TZ: /usr/share/zoneinfo/Asia/Tokyo
    steps:
      - checkout
      - run:
          name: Create a directory to store your third-party libraries
          command: |
            mkdir lib
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-ci.txt" }}-{{ checksum ".circleci/config.yml" }}-
      - run:
          name: vendor our dependencies
          command: |
            pip install -t lib -r requirements.txt
      - run:
          name: Retrieve our secrets from the CircleCI environment
          command: echo $CLIENT_SECRET | base64 --decode > ${HOME}/client-secret.json
      - run:
          name: authenticate gcloud
          command: gcloud auth activate-service-account --key-file ${HOME}/client-secret.json
      - run:
          name: config gcloud
          command: gcloud config set project $GCLOUD_PROJECT
      - run:
          name: deploy to AppEngine
          command: gcloud -q app deploy --version 1

workflows:
  version: 2
  check-deply:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
